struct dah_task{
    on?: int,
    time?: int,
    sec?: int,
    by?: #[uuid] string,
    as?: string,
    flags?:[dah_flags],
    run?: #[command] string,
    position?: [double] @ 3,
    pos_x?:double,
    pos_y?:double,
    pos_z?:double,
    rotation?: [float] @ 2,
    rot_x?: float,
    rot_y?: float,
    force?: byte @ 0..1,
    in?:#[id="dimension"] string,
    debug?: byte @ 0..1
}

enum(string) dah_flags{
    no_executer = "no_executer",
    debug = "debug",
}

type dah_run = ([dah_task]|any)

dispatch minecraft:storage["dah.sch:task"] to struct{
    this: dah_task,
    stash: [dah_task],
    save: [dah_task],
    run: dah_run,
    player?: [dah_player],
    online?: [dah_player],
    offline?: [dah_player],
    temp?: any,
    run2?: any,
    que?: [dah_player_task],
}

dispatch minecraft:storage["dah.sch:new"] to struct{
    new: dah_task_raw,
}

struct dah_task_raw {
    /// The command to run. No slash. *REQUIRED*
    run?: #[command] string,
    /// The number of ticks to wait before running the command.  *REQUIRED*
    time?: int,
    /// Specifies the dimension to run the command in. If not specified, the command will always run in minecraft:overworld.
    in?: #[id="dimension"] string,
    /// What to do if the target entity is not found. Defaults to "discard". Options:
    ///     discard: Do nothing and remove the task.
    ///     delay: *FOR PLAYER* The timer ticks when the player is offline, but it only executes until the player go back online
    ///     pause: *FOR PLAYER* Wait for the player to go back online. Timer freezes when the player is offline.
    ///     by_server: The command will be run by the server, not the entity.
    offline?: dah_offline,
    /// Defines extra behavior for the task. Options:
    ///     no_executer: The command will be run by server.
    ///     debug: Output debug information to chat.
    flags?: [dah_flags],
}

struct dah_player{
    task?: [dah_player_task],
    pause?: [dah_player_task],
    UID?: int @ -1..,
    uuid?: #[uuid] string,
}


struct dah_player_task{
    on?: int,
    run?: #[command] string,
    pos_x:double,
    pos_y:double,
    pos_z:double,
    rot_x?: float,
    rot_y?: float,
    offline?: dah_offline,
    flags?: [dah_flags],
    by?: #[uuid] string,
}

enum(string) dah_offline{
    discard = "discard",
    delay = "delay",
    pause = "pause",
    by_server = "by_server"
}